// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.30.0

package database

import (
	"github.com/jackc/pgx/v5/pgtype"
)

type Account struct {
	ID                    string           `json:"id"`
	AccountID             string           `json:"accountId"`
	ProviderID            string           `json:"providerId"`
	UserID                string           `json:"userId"`
	AccessToken           pgtype.Text      `json:"accessToken"`
	RefreshToken          pgtype.Text      `json:"refreshToken"`
	IDToken               pgtype.Text      `json:"idToken"`
	AccessTokenExpiresAt  pgtype.Timestamp `json:"accessTokenExpiresAt"`
	RefreshTokenExpiresAt pgtype.Timestamp `json:"refreshTokenExpiresAt"`
	Scope                 pgtype.Text      `json:"scope"`
	Password              pgtype.Text      `json:"password"`
	CreatedAt             pgtype.Timestamp `json:"createdAt"`
	UpdatedAt             pgtype.Timestamp `json:"updatedAt"`
}

type Run struct {
	ID        pgtype.UUID      `json:"id"`
	UserID    pgtype.Text      `json:"userId"`
	Data      []byte           `json:"data"`
	CreatedAt pgtype.Timestamp `json:"createdAt"`
	Image     string           `json:"image"`
}

type Session struct {
	ID             string           `json:"id"`
	ExpiresAt      pgtype.Timestamp `json:"expiresAt"`
	Token          string           `json:"token"`
	CreatedAt      pgtype.Timestamp `json:"createdAt"`
	UpdatedAt      pgtype.Timestamp `json:"updatedAt"`
	IpAddress      pgtype.Text      `json:"ipAddress"`
	UserAgent      pgtype.Text      `json:"userAgent"`
	UserID         string           `json:"userId"`
	ImpersonatedBy pgtype.Text      `json:"impersonatedBy"`
}

type User struct {
	ID              string           `json:"id"`
	Name            string           `json:"name"`
	Email           string           `json:"email"`
	EmailVerified   bool             `json:"emailVerified"`
	Username        string           `json:"username"`
	DisplayUsername string           `json:"displayUsername"`
	Image           pgtype.Text      `json:"image"`
	CreatedAt       pgtype.Timestamp `json:"createdAt"`
	UpdatedAt       pgtype.Timestamp `json:"updatedAt"`
	Role            pgtype.Text      `json:"role"`
	Banned          pgtype.Bool      `json:"banned"`
	BanReason       pgtype.Text      `json:"banReason"`
	BanExpires      pgtype.Timestamp `json:"banExpires"`
}

type Verification struct {
	ID         string           `json:"id"`
	Identifier string           `json:"identifier"`
	Value      string           `json:"value"`
	ExpiresAt  pgtype.Timestamp `json:"expiresAt"`
	CreatedAt  pgtype.Timestamp `json:"createdAt"`
	UpdatedAt  pgtype.Timestamp `json:"updatedAt"`
}
