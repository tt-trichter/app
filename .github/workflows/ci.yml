name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

permissions:
  contents: read
  packages: write
  pull-requests: write
  checks: write

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  # Detect changes to determine which services to build
  changes:
    name: Detect Changes
    runs-on: ubuntu-latest
    outputs:
      web: ${{ steps.changes.outputs.web }}
      api: ${{ steps.changes.outputs.api }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Check for changes
        uses: dorny/paths-filter@v3
        id: changes
        with:
          filters: |
            web:
              - 'web/**'
              - '.github/workflows/**'
            api:
              - 'api/**'
              - '.github/workflows/**'

  # Web application CI
  web:
    name: Web Application
    runs-on: ubuntu-latest
    needs: changes
    if: ${{ needs.changes.outputs.web == 'true' }}
    defaults:
      run:
        working-directory: web
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Install dependencies
        run: bun install

      - name: Type check
        run: bun run check

      - name: Lint
        run: bun run lint

      - name: Test
        run: bun run test

      - name: Build
        run: bun run build

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: web-build
          path: web/build/
          if-no-files-found: error
          retention-days: 7

  # API application CI
  api:
    name: API Application
    runs-on: ubuntu-latest
    needs: changes
    if: ${{ needs.changes.outputs.api == 'true' }}
    defaults:
      run:
        working-directory: api
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.23'
          cache: true

      - name: Install dependencies
        run: go mod download

      - name: Verify dependencies
        run: go mod verify

      - name: Lint
        uses: golangci/golangci-lint-action@v6
        with:
          version: latest
          working-directory: api

      - name: Test
        run: go test -v -race -coverprofile=coverage.out ./...

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          file: ./api/coverage.out
          flags: api
          name: api-coverage

      - name: Build
        run: go build -v -o bin/api ./cmd/api

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: api-binary
          path: api/bin/api
          if-no-files-found: error
          retention-days: 7

  # Docker builds for PRs (no push)
  docker-preview:
    name: Docker Preview
    runs-on: ubuntu-latest
    needs: [changes, web, api]
    if: ${{ github.event_name == 'pull_request' }}
    strategy:
      matrix:
        include:
          - service: web
            context: web
            dockerfile: web/Dockerfile
            condition: ${{ needs.changes.outputs.web == 'true' }}
          - service: api
            context: api
            dockerfile: api/Dockerfile
            condition: ${{ needs.changes.outputs.api == 'true' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        if: ${{ matrix.condition }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        if: ${{ matrix.condition }}

      - name: Build Docker image
        uses: docker/build-push-action@v6
        if: ${{ matrix.condition }}
        with:
          context: ${{ matrix.context }}
          file: ${{ matrix.dockerfile }}
          push: false
          platforms: linux/amd64,linux/arm64
          cache-from: type=gha
          cache-to: type=gha,mode=max
